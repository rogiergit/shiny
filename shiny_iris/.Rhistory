y
y <- cbind(var = "cyl",rsquared = summary(lm(mpg ~ cyl , data = trend))$r.squared)
y <- rbind(var = "hp",rsquared = summary(lm(mpg ~ hp , data = trend))$r.squared)
View(y)
y <- rbind("hp",summary(lm(mpg ~ hp , data = trend))$r.squared)
View(y)
rm("y")
y <- rbind(cbind(var = "cyl",rsquared = summary(lm(mpg ~ cyl , data = trend))$r.squared))
View(y)
y <- rbind(cbind(var = "hp",rsquared = summary(lm(mpg ~ hp , data = trend))$r.squared))
View(y)
View(y)
y[0] <- rbind(cbind(var = "cyl",rsquared = summary(lm(mpg ~ cyl , data = trend))$r.squared))
y[1] <- rbind(cbind(var = "hp",rsquared = summary(lm(mpg ~ hp , data = trend))$r.squared))
rm("y")
y[0] <- cbind(var = "cyl",rsquared = summary(lm(mpg ~ cyl , data = trend))$r.squared)
y=data.frame(var = character(), rsquared=numeric())
y[0] <- cbind(var = "cyl",rsquared = summary(lm(mpg ~ cyl , data = trend))$r.squared)
View(y)
y[0] <- rbind(var = "cyl",rsquared = summary(lm(mpg ~ cyl , data = trend))$r.squared)
y[0] <- cbind(var = "cyl",rsquared = summary(lm(mpg ~ cyl , data = trend))$r.squared)
y <- rbind(cbind(var = "cyl",rsquared = summary(lm(mpg ~ cyl , data = trend))$r.squared))
y <- rbind(cbind(var = "hp",rsquared = summary(lm(mpg ~ hp , data = trend))$r.squared))
View(y)
?rbind
y1 <- cbind(var = "cyl",rsquared = summary(lm(mpg ~ cyl , data = trend))$r.squared))
y2 <- cbind(var = "hp",rsquared = summary(lm(mpg ~ hp , data = trend))$r.squared))
y1 <- cbind(var = "cyl",rsquared = summary(lm(mpg ~ cyl , data = trend))$r.squared)
y2 <- cbind(var = "hp",rsquared = summary(lm(mpg ~ hp , data = trend))$r.squared)
y3 <- cbind(var = "drat",rsquared = summary(lm(mpg ~ drat , data = trend))$r.squared)
y4 <- cbind(var = "wt",rsquared = summary(lm(mpg ~ wt , data = trend))$r.squared)
y5 <- cbind(var = "vs",rsquared = summary(lm(mpg ~ vs , data = trend))$r.squared)
y6 <- cbind(var = "am",rsquared = summary(lm(mpg ~ am , data = trend))$r.squared)
y7 <- cbind(var = "carb",rsquared = summary(lm(mpg ~ carb , data = trend))$r.squared)
y<-rbind(y1,y2,y3,y4,y5,y6)
y
fit <- lm(mpg ~ am , data = trend)
summary(fit)
fit <- lm(mpg ~ am , data = trend); summary(fit)$coef;summary(fit)$r-squared
fit <- lm(mpg ~ am , data = trend); summary(fit)$coef;summary(fit)$r.squared
print(paste("R-squared = ",summary(fit)$r.squared))
y=data.frame(var = character(), rsquared=numeric())
y1 <- cbind(var = "cyl",rsquared = summary(lm(mpg ~ cyl , data = trend))$r.squared)
y2 <- cbind(var = "hp",rsquared = summary(lm(mpg ~ hp , data = trend))$r.squared)
y3 <- cbind(var = "drat",rsquared = summary(lm(mpg ~ drat , data = trend))$r.squared)
y4 <- cbind(var = "wt",rsquared = summary(lm(mpg ~ wt , data = trend))$r.squared)
y5 <- cbind(var = "vs",rsquared = summary(lm(mpg ~ vs , data = trend))$r.squared)
y6 <- cbind(var = "am",rsquared = summary(lm(mpg ~ am , data = trend))$r.squared)
y7 <- cbind(var = "carb",rsquared = summary(lm(mpg ~ carb , data = trend))$r.squared)
(y<-rbind(y1,y2,y3,y4,y5,y6))
order((y<-rbind(y1,y2,y3,y4,y5,y6)))
arrange((y<-rbind(y1,y2,y3,y4,y5,y6)),2)
arrange(y, desc(rsquared))
y<-rbind(y1,y2,y3,y4,y5,y6))
y=data.frame(var = character(), rsquared=numeric())
y1 <- cbind(var = "cyl",rsquared = summary(lm(mpg ~ cyl , data = trend))$r.squared)
y2 <- cbind(var = "hp",rsquared = summary(lm(mpg ~ hp , data = trend))$r.squared)
y3 <- cbind(var = "drat",rsquared = summary(lm(mpg ~ drat , data = trend))$r.squared)
y4 <- cbind(var = "wt",rsquared = summary(lm(mpg ~ wt , data = trend))$r.squared)
y5 <- cbind(var = "vs",rsquared = summary(lm(mpg ~ vs , data = trend))$r.squared)
y6 <- cbind(var = "am",rsquared = summary(lm(mpg ~ am , data = trend))$r.squared)
y7 <- cbind(var = "carb",rsquared = summary(lm(mpg ~ carb , data = trend))$r.squared)
y<-rbind(y1,y2,y3,y4,y5,y6))
y<-rbind(y1,y2,y3,y4,y5,y6)
arrange(y, desc(rsquared))
View(y)
View(y)
arrange(y, rsquared)
library(dplyr)
arrange(y, rsquared)
arrange(y, y$rsquared)
(y<-rbind(y1,y2,y3,y4,y5,y6))
arrange(y, desc(as.numeric(rsquared)))
arrange(y, desc(as.numeric(rsquared)))
y=data.frame(var = character(), rsquared=numeric())
y1 <- cbind(var = "cyl",rsquared = as.numeric(summary(lm(mpg ~ cyl , data = trend))$r.squared))
y2 <- cbind(var = "hp",rsquared = as.numeric(summary(lm(mpg ~ hp , data = trend))$r.squared))
y3 <- cbind(var = "drat",rsquared = as.numeric(summary(lm(mpg ~ drat , data = trend))$r.squared))
y4 <- cbind(var = "wt",rsquared = as.numeric(summary(lm(mpg ~ wt , data = trend))$r.squared))
y5 <- cbind(var = "vs",rsquared = as.numeric(summary(lm(mpg ~ vs , data = trend))$r.squared))
y6 <- cbind(var = "am",rsquared = as.numeric(summary(lm(mpg ~ am , data = trend))$r.squared))
y7 <- cbind(var = "carb",rsquared = as.numeric(summary(lm(mpg ~ carb , data = trend))$r.squared))
(y<-rbind(y1,y2,y3,y4,y5,y6))
View(`y3`)
(y<-rbind(y1,y2,y3,y4,y5,y6))
y=data.frame(var = character(), rsquared=numeric())
y1 <- cbind(var = "cyl",rsquared = as.numeric(summary(lm(mpg ~ cyl , data = trend))$r.squared))
y2 <- cbind(var = "drat",rsquared = as.numeric(summary(lm(mpg ~ drat , data = trend))$r.squared))
y3 <- cbind(var = "wt",rsquared = as.numeric(summary(lm(mpg ~ wt , data = trend))$r.squared))
y4 <- cbind(var = "vs",rsquared = as.numeric(summary(lm(mpg ~ vs , data = trend))$r.squared))
y5 <- cbind(var = "am",rsquared = as.numeric(summary(lm(mpg ~ am , data = trend))$r.squared))
y6 <- cbind(var = "carb",rsquared = as.numeric(summary(lm(mpg ~ carb , data = trend))$r.squared))
(y<-rbind(y1,y2,y3,y4,y5,y6))
fit1 <- lm(mpg ~ wt , data = trend)
fit2 <- lm(mpg ~ wt + cyl , data = trend)
anova(fit1, fit2)
summary(fit1)$coef
summary(fit1)
fit1 <- lm(mpg ~ wt , data = trend)
summary(fit1)
fit1 <- lm(mpg ~ wt , data = trend)
fit2 <- lm(mpg ~ wt + cyl , data = trend)
fit3 <- lm(mpg ~ wt + cyl + drat, data = trend)
anova(fit1, fit2)
fit3 <- lm(mpg ~ wt + cyl + drat, data = trend)
anova(fit2, fit3)
anova(fit1, fit2)$p.value
anova(fit1, fit2)$p
anova(fit1, fit2)
g = ggplot(trend, aes(x = wt, y = mpg, colour = am))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("Weight") + ylab("MPG")
g = g + geom_smooth(method="lm")
g
weight<-group_by(trend, wt, ma)
weight<-group_by(trend, wt, am)
summarize(weight, mean(mpg))
weight<-group_by(trend, am, mean(wt))
summarize(weight, mean(mpg))
weight<-group_by(trend, am)
summarize(weight, mean(mpg))
summarize(weight, mean(wt), mean(mpg))
g = ggplot(trend, aes(x = I(as.numeric(cyl)), y = mpg, colour = am))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("Cylinders") + ylab("MPG")
g = g + geom_smooth(method="lm")
g
summarize(cyl, mean(as.numeric(cyl)), mean(mpg))
cyl<-group_by(trend, am)
summarize(cyl, mean(as.numeric(cyl)), mean(mpg))
par(mfrow=c(2,1))
g = ggplot(trend, aes(x = I(as.numeric(cyl)), y = mpg, colour = am))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("Cylinders") + ylab("MPG")
g = g + geom_smooth(method="lm")
g
g = ggplot(trend, aes(x = I(as.numeric(cyl)), y = mpg, colour = am))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("Cylinders") + ylab("MPG")
g = g + geom_smooth(method="lm")
g
```
par(mfrow=c(2,1))
g = ggplot(trend, aes(x = I(as.numeric(cyl)), y = mpg, colour = am))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("Cylinders") + ylab("MPG")
g = g + geom_smooth(method="lm")
g
g = ggplot(trend, aes(x = I(as.numeric(cyl)), y = mpg, colour = am))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("Cylinders") + ylab("MPG")
g = g + geom_smooth(method="lm")
h = ggplot(trend, aes(x = I(as.numeric(cyl)), y = mpg, colour = am))
h = h + geom_point(size = 6, colour = "black") + geom_point(size = 4)
h = h + xlab("Cylinders") + ylab("MPG")
h = h + geom_smooth(method="lm")
grid.arrange(g, h, ncol=2)
require(gridExtra)
install.packages("gridExtra")
library(gridExtra)
g = ggplot(trend, aes(x = I(as.numeric(cyl)), y = mpg, colour = am))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("Cylinders") + ylab("MPG")
g = g + geom_smooth(method="lm")
h = ggplot(trend, aes(x = I(as.numeric(cyl)), y = mpg, colour = am))
h = h + geom_point(size = 6, colour = "black") + geom_point(size = 4)
h = h + xlab("Cylinders") + ylab("MPG")
h = h + geom_smooth(method="lm")
grid.arrange(g, h, ncol=2)
g = ggplot(trend, aes(x = wt, y = mpg, colour = am))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("Weight") + ylab("MPG")
g = g + geom_smooth(method="lm")
h = ggplot(trend, aes(x = I(as.numeric(cyl)), y = mpg, colour = am))
h = h + geom_point(size = 6, colour = "black") + geom_point(size = 4)
h = h + xlab("Cylinders") + ylab("MPG")
h = h + geom_smooth(method="lm")
grid.arrange(g, h, ncol=2)
fileUrltrain <-"https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
train<-read.csv(fileurltrain)
train<-read.csv(fileUrltrain)
fileUrltest <-"https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
test<-read.csv(fileUrltest)
View(train)
unique(train$class)
fileUrltrain <-"https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
data<-read.csv(fileUrltrain)
fileUrldata <-"https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
fileUrldata <-"https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
data<-read.csv(fileUrldata)
fileUrlprojecttest <-"https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
testproject<-read.csv(fileUrlprojecttest)
library(caret)
unique(data$class)
inTrain <- createDataPartition(y=data$class, #we proberen class
p=0.7, list=FALSE)
training <- data[inTrain,]
testing <- data[-inTrain,]
dim(training); dim(testing)
modFit <- train(class~ .,data=training,method="rf",prox=TRUE) # geen idee waarom prox = true
View(training)
View(data)
modFit <- train(class~ .,data=training,method="rf",prox=TRUE) # geen idee waarom prox = true
class(training)
data<-select(data, -new_window)
View(data)
data<-select(data, -new_window)
data<-select(data, -user_name)
data<-select(data, -raw_timestamp_part_1)
data<-select(data, -raw_timestamp_part2)
data<-select(data, -cvtd_timestamp)
data<-select(data, -raw_timestamp_part_2)
inTrain <- createDataPartition(y=data$class, #we proberen class
p=0.7, list=FALSE)
training <- data[inTrain,]
testing <- data[-inTrain,]
dim(training); dim(testing)
class(training)
modFit <- train(class~ .,data=training,method="rf",prox=TRUE) # geen idee waarom prox = true
trainingm <-as.matrix(training)
modFit <- train(class~ .,data=trainingm,method="rf",prox=TRUE) # geen idee waarom prox = true
View(trainingm)
data<-select(data, num_window, roll_belt, pitch_belt, yaw_belt, total_accel_belt, gyros_belt_x, gyros_belt_y, gyros_belt_z, accel_belt_y, accel_belt_x, accel_belt_z, magnet_belt_x, magnet_belt_y, magnet_belt_z, roll_arm, pitch_arm, yaw_arm, total_accel_arm, gyros_arm_x, gyros_arm_y, gyros_arm_z, accel_arm_x, accel_arm_y, accel_arm_z, magnet_arm_x, magnet_arm_y, magnet_arm_z, roll_dumbbell, pitch_dumbbell, yaw_dubbell, total_accel_dumbbell)
data<-select(data, num_window, roll_belt, pitch_belt, yaw_belt, total_accel_belt, gyros_belt_x, gyros_belt_y, gyros_belt_z, accel_belt_y, accel_belt_x, accel_belt_z, magnet_belt_x, magnet_belt_y, magnet_belt_z, roll_arm, pitch_arm, yaw_arm, total_accel_arm, gyros_arm_x, gyros_arm_y, gyros_arm_z, accel_arm_x, accel_arm_y, accel_arm_z, magnet_arm_x, magnet_arm_y, magnet_arm_z, roll_dumbbell, pitch_dumbbell, yaw_dumbbell, total_accel_dumbbell)
inTrain <- createDataPartition(y=data$class, #we proberen class
p=0.7, list=FALSE)
training <- data[inTrain,]
testing <- data[-inTrain,]
dim(training); dim(testing)
class(training)
trainingm <-as.matrix(training)
modFit <- train(class~ .,data=trainingm,method="rf",prox=TRUE) # geen idee waarom prox = true
View(trainingm)
modFit <- train(class~ .,data=training,method="rf",prox=TRUE) # geen idee waarom prox = true
training <-as.dataframe(training)
data<-read.csv(fileUrldata)
class(data)
data<-select(data, num_window, roll_belt, pitch_belt, yaw_belt, total_accel_belt, gyros_belt_x, gyros_belt_y, gyros_belt_z, accel_belt_y, accel_belt_x, accel_belt_z, magnet_belt_x, magnet_belt_y, magnet_belt_z, roll_arm, pitch_arm, yaw_arm, total_accel_arm, gyros_arm_x, gyros_arm_y, gyros_arm_z, accel_arm_x, accel_arm_y, accel_arm_z, magnet_arm_x, magnet_arm_y, magnet_arm_z, roll_dumbbell, pitch_dumbbell, yaw_dumbbell, total_accel_dumbbell)
data<-read.csv(fileUrldata)
dataframe<-select(data, num_window, roll_belt, pitch_belt, yaw_belt, total_accel_belt, gyros_belt_x, gyros_belt_y, gyros_belt_z, accel_belt_y, accel_belt_x, accel_belt_z, magnet_belt_x, magnet_belt_y, magnet_belt_z, roll_arm, pitch_arm, yaw_arm, total_accel_arm, gyros_arm_x, gyros_arm_y, gyros_arm_z, accel_arm_x, accel_arm_y, accel_arm_z, magnet_arm_x, magnet_arm_y, magnet_arm_z, roll_dumbbell, pitch_dumbbell, yaw_dumbbell, total_accel_dumbbell)
inTrain <- createDataPartition(y=dataframe$class, #we proberen class
p=0.7, list=FALSE)
dataframe<-select(data, class, num_window, roll_belt, pitch_belt, yaw_belt, total_accel_belt, gyros_belt_x, gyros_belt_y, gyros_belt_z, accel_belt_y, accel_belt_x, accel_belt_z, magnet_belt_x, magnet_belt_y, magnet_belt_z, roll_arm, pitch_arm, yaw_arm, total_accel_arm, gyros_arm_x, gyros_arm_y, gyros_arm_z, accel_arm_x, accel_arm_y, accel_arm_z, magnet_arm_x, magnet_arm_y, magnet_arm_z, roll_dumbbell, pitch_dumbbell, yaw_dumbbell, total_accel_dumbbell)
data<-read.csv(fileUrldata)
unique(data$class)
dataframe<-select(data, class, num_window, roll_belt, pitch_belt, yaw_belt, total_accel_belt, gyros_belt_x, gyros_belt_y, gyros_belt_z, accel_belt_y, accel_belt_x, accel_belt_z, magnet_belt_x, magnet_belt_y, magnet_belt_z, roll_arm, pitch_arm, yaw_arm, total_accel_arm, gyros_arm_x, gyros_arm_y, gyros_arm_z, accel_arm_x, accel_arm_y, accel_arm_z, magnet_arm_x, magnet_arm_y, magnet_arm_z, roll_dumbbell, pitch_dumbbell, yaw_dumbbell, total_accel_dumbbell)
View(data)
dataframe<-select(data, num_window, roll_belt, pitch_belt, yaw_belt, total_accel_belt, gyros_belt_x, gyros_belt_y, gyros_belt_z, accel_belt_y, accel_belt_x, accel_belt_z, magnet_belt_x, magnet_belt_y, magnet_belt_z, roll_arm, pitch_arm, yaw_arm, total_accel_arm, gyros_arm_x, gyros_arm_y, gyros_arm_z, accel_arm_x, accel_arm_y, accel_arm_z, magnet_arm_x, magnet_arm_y, magnet_arm_z, roll_dumbbell, pitch_dumbbell, yaw_dumbbell, total_accel_dumbbell)
unique(dataframe$class)
data<-select(data, -grep("*kurt*"))
data<-select(data, -sub("*kurt*"))
modFit <- train(class~ .,data=training,na.omit=TRUE, method="rf",prox=TRUE) # geen idee waarom prox = true
library(RandomForest)
library(randomForest)
modFit <- randomForest(class~ .,data=training,na.omit=TRUE, method="rf",prox=TRUE) # geen idee waarom prox = true
data2<-select(data, class)
names(data)
unique(data$classe)
dataframe<-select(data, classe, num_window, roll_belt, pitch_belt, yaw_belt, total_accel_belt, gyros_belt_x, gyros_belt_y, gyros_belt_z, accel_belt_y, accel_belt_x, accel_belt_z, magnet_belt_x, magnet_belt_y, magnet_belt_z, roll_arm, pitch_arm, yaw_arm, total_accel_arm, gyros_arm_x, gyros_arm_y, gyros_arm_z, accel_arm_x, accel_arm_y, accel_arm_z, magnet_arm_x, magnet_arm_y, magnet_arm_z, roll_dumbbell, pitch_dumbbell, yaw_dumbbell, total_accel_dumbbell)
unique(dataframe$classe)
inTrain <- createDataPartition(y=dataframe$classe, #we proberen class
p=0.7, list=FALSE)
training <- dataframe[inTrain,]
testing <- dataframe[-inTrain,]
dim(training); dim(testing)
modFit <- randomForest(class~ .,data=training,method="rf",prox=TRUE) # geen idee waarom prox = true
trainingmat <-as.matrix(training)
modFit <- randomForest(class~ .,data=trainingmat,method="rf",prox=TRUE) # geen idee waarom prox = true
modFit <- randomForest(class~ .,data=trainingmat,method="rf") # geen idee waarom prox = true
modFit <- randomForest(classe~ .,data=trainingmat,method="rf") # geen idee waarom prox = true
dataframe <- sapply(dataframe, as.numeric)
dataframe$classe <- factor(dataframe$classe)
dataframevar<-select(data, num_window, roll_belt, pitch_belt, yaw_belt, total_accel_belt, gyros_belt_x, gyros_belt_y, gyros_belt_z, accel_belt_y, accel_belt_x, accel_belt_z, magnet_belt_x, magnet_belt_y, magnet_belt_z, roll_arm, pitch_arm, yaw_arm, total_accel_arm, gyros_arm_x, gyros_arm_y, gyros_arm_z, accel_arm_x, accel_arm_y, accel_arm_z, magnet_arm_x, magnet_arm_y, magnet_arm_z, roll_dumbbell, pitch_dumbbell, yaw_dumbbell, total_accel_dumbbell)
dataframevar <- sapply(dataframevar, as.numeric)
dataframeclass<-select(data, classe)
dataframeclasse<-select(data, classe)
dataframe<-cbind(dataframeclasse,dataframevar)
View(dataframe)
unique(dataframe$classe)
inTrain <- createDataPartition(y=dataframe$classe, #we proberen class
p=0.7, list=FALSE)
training <- dataframe[inTrain,]
testing <- dataframe[-inTrain,]
dim(training); dim(testing)
class(training)
modFit <- randomForest(classe~ .,data=trainingmat,method="rf") # geen idee waarom prox = true
class(training$classe)
modFit <- randomForest(classe~ .,data=training,method="rf") # geen idee waarom prox = true
pred <- predict(modFit,testing)
testing$predRight <- pred==testing$classe #vergelijk prediction met observed
table(pred,testing$classe)
(pred20<-predict(modFit,testproject))
setwd("E:\\Dev\\R\\Coursera\\8 Machine\\")
pml_write_files(pred20)
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
pml_write_files(pred20)
pred <- predict(modFit,testing)
testing$predRight <- pred==testing$classe #vergelijk prediction met observed
table(pred,testing$classe)
confusionMatrix(pred,testing$classe)
fileUrldata <-"https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
download.file(fileUrldata, destfile = "./pml-training.csv")
data<-read.csv("./pml-training.csv")
data<-read.csv("./pml-training.csv")
setwd("E:\\Dev\\R\\Coursera\\8 Machine\\")
data<-read.csv("pml-training.csv")
testproject<-read.csv("pml-testing.csv")
runapp("E:\\Dev\\R\\Coursera\8 Machine\\shiny\\")
setwd("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runapp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
library(shiny)
runapp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
library(shiny)
require(shiny)
runapp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
library(ggplot2)
data(iris)
data(iris)
data<-iris
modFit <- train(Species~ .,data=data,method="rf",prox=TRUE)
library(caret)
modFit <- train(Species~ .,data=data,method="rf",prox=TRUE)
modFit <- train(Species~ .,data=data,method="rf",prox=TRUE)
irisP <- classCenter(training[,c(fieldsx[1],fieldsx[2])], training$Species, modFit$finalModel$prox)
irisP <- classCenter(data[,c(fieldsx[1],fieldsx[2])], data$Species, modFit$finalModel$prox)
fieldsx <- c("Sepal.Length", "Sepal.Width",  "Petal.Length", "Petal.Width")
fieldsy <- c("Sepal.Length", "Sepal.Width",  "Petal.Length", "Petal.Width")
irisP <- classCenter(data[,c(fieldsx[1],fieldsx[2])], data$Species, modFit$finalModel$prox)
irisP <- as.data.frame(irisP)
irisP
irisP <- classCenter(data[,c(fieldsx[3],fieldsx[2])], data$Species, modFit$finalModel$prox)
irisP <- as.data.frame(irisP)
irisP
irisP <- classCenter(data[,c(fieldsx[1],fieldsx[2])], data$Species, modFit$finalModel$prox)
irisP <- as.data.frame(irisP)
irisP
irisP$Species <- rownames(irisP)
(irisP$Species <- rownames(irisP))
p <- qplot(fieldsx[1],fieldsx[2]), col=Species,data=data)
fieldsx[1]
p <- qplot(fieldsx[1],fieldsx[2], col=Species,data=data)
p + geom_point(aes(x=fieldsx[1],y=fieldsx[2],col=Species),size=5,shape=4,data=irisP)
modFit <- train(Species~ .,data=data,method="rf",prox=TRUE)
fieldsx <- c("Sepal.Length", "Sepal.Width",  "Petal.Length", "Petal.Width")
fieldsy <- c("Sepal.Length", "Sepal.Width",  "Petal.Length", "Petal.Width")
irisP <- classCenter(data[,c(fieldsx[1],fieldsx[2])], data$Species, modFit$finalModel$prox)
irisP <- as.data.frame(irisP)
irisP$Species <- rownames(irisP)
p <- qplot(fieldsx[1],fieldsx[2], col=Species,data=data)
p + geom_point(aes(x=fieldsx[1],y=fieldsx[2],col=Species),size=5,shape=4,data=irisP)
View(irisP)
View(irisP)
fieldsx[1]
irisP[,fieldsx[1]]
irisP[,fieldsx[2]]
fieldsx <- c("Sepal.Length", "Sepal.Width",  "Petal.Length", "Petal.Width")
fieldsy <- c("Sepal.Length", "Sepal.Width",  "Petal.Length", "Petal.Width")
irisP <- classCenter(data[,c(fieldsx[1],fieldsy[2])], data$Species, modFit$finalModel$prox)
irisP <- as.data.frame(irisP)
irisP$Species <- rownames(irisP)
p <- qplot(fieldsx[1],fieldsy[2], col=Species,data=data)
p + geom_point(aes(x=fieldsx[1],y=fieldsy[2],col=Species),size=5,shape=4,data=irisP)
fieldsy[2]
irisP[,fieldsy[2]]
irisP[,fieldsx[1]]
p <- qplot(fieldsx[1],fieldsy[2], col=Species,data=data)
p
p <- qplot(x=fieldsx[1],y=fieldsy[2], col=Species,data=data)
p
p <- qplot(Sepal.Width, Petal.Length, col=Species,data=data)
p
p <- qplot(x=fieldsx[1],y=fieldsy[2], col=Species,data=data)
p
p <- qplot(x="Sepal.Length",y="Sepal.Width", col=Species,data=data)
p
p <- qplot(x=Sepal.Length,y=Sepal.Width, col=Species,data=data)
p
p <- qplot(x=data[,fieldsx[1]],y=data[,fieldsy[2]], col=Species,data=data)
p
p <- qplot(Sepal.Length, Petal.Length, col=Species,data=data)
p
p <- qplot(x=data[,fieldsx[1]],y=data[,fieldsy[3]], col=Species,data=data)
p
p <- qplot(x=data[,fieldsx[1]],y=data[,fieldsy[3]], col=Species,data=data, xlax=fieldsx[1])
p <- qplot(x=data[,fieldsx[1]],y=data[,fieldsy[3]], col=Species,data=data, xlab=fieldsx[1])
p
p <- qplot(x=data[,fieldsx[1]],y=data[,fieldsy[3]], col=Species,data=data, xlab=fieldsx[1], ylab=fieldsy[3])
p
p <- qplot(x=data[,fieldsx[1]],y=data[,fieldsy[3]], col=Species,data=data, xlab=fieldsx[1], ylab=fieldsy[3])
p + geom_point(aes(x=fieldsx[1],y=fieldsy[2],col=Species),size=5,shape=4,data=irisP)
p
p <- qplot(x=data[,fieldsx[1]],y=data[,fieldsy[3]], col=Species,data=data, xlab=fieldsx[1], ylab=fieldsy[3])
p + geom_point(aes(x=irisP[,fieldsx[1]],y=irisP[,fieldsy[2]],col=Species),size=5,shape=4,data=irisP)
p
irisP <- classCenter(data[,c(fieldsx[1],fieldsy[3])], data$Species, modFit$finalModel$prox)
irisP <- as.data.frame(irisP)
irisP$Species <- rownames(irisP)
View(irisP)
p <- qplot(x=data[,fieldsx[1]],y=data[,fieldsy[3]], col=Species,data=data, xlab=fieldsx[1], ylab=fieldsy[3])
p + geom_point(aes(x=irisP[,fieldsx[1]],y=irisP[,fieldsy[3]],col=Species),size=5,shape=4,data=irisP)
p <- p + geom_point(aes(x=irisP[,fieldsx[1]],y=irisP[,fieldsy[3]],col=Species),size=5,shape=4,data=irisP)
p <- qplot(x=data[,fieldsx[1]],y=data[,fieldsy[3]], col=Species,data=data, xlab=fieldsx[1], ylab=fieldsy[3])
p <- p + geom_point(aes(x=irisP[,fieldsx[1]],y=irisP[,fieldsy[3]],col=Species),size=5,shape=4,data=irisP)
p
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
input$x<-c("Sepal.Length")
x<-c("Sepal.Length")
y<-c("Petal.Length")
plot(iris[,x], iris[,y])
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
unique(iris$Species)
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
x<-c("Sepal.Length")
y<-c("Petal.Length")
s<-c("setosa")
qplot(x=data[data$species %in% s,x],y=data[data$species %in% s,y], col=Species,data=data, xlab=x, ylab=y)
library(dpyr)
data<-filter(data, species=s)
data<-filter(data, species %in% s)
View(data)
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
data<-filter(data, Species %in% s)
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
x<-c("Sepal.Length")
y<-c("Petal.Length")
s<-c("setosa")
qplot(x=data[data$species %in% s,x],y=data[data$species %in% s,y], col=Species,data=data, xlab=x, ylab=y)
data[data$species %in% s,x]
data[data$species =="setosa",x]
data[data$Species =="setosa",x]
qplot(x=data[data$Species %in% s,x],y=data[data$Species %in% s,y], col=data$Species,data=data, xlab=x, ylab=y)
s<-c("setosa", "versicolor")
qplot(x=data[data$Species %in% s,x],y=data[data$Species %in% s,y], col=data$Species,data=data, xlab=x, ylab=y)
x<-c("Sepal.Length")
y<-c("Petal.Length")
s<-c("setosa", "versicolor")
qplot(x=data[data$Species %in% s,x],y=data[data$Species %in% s,y], col=data$Species,data=data, xlab=x, ylab=y)
data[data$Species %in% s,x]
data[data$Species %in% s,y]
qplot(x=data[data$Species %in% s,x],y=data[data$Species %in% s,y], col=data$Species, xlab=x, ylab=y)
data<-iris
data[data$Species %in% s,x]
data[data$Species %in% s,y]
qplot(x=data[data$Species %in% s,x],y=data[data$Species %in% s,y], col=data$Species, xlab=x, ylab=y)
datafilt<-filter(data, Species %in% s)
qplot(x=datafilt[,x],y=datafilt[,y], col=data$Species, xlab=x, ylab=y)
qplot(aes(x=datafilt[,x],y=datafilt[,y], col=data$Species), xlab=x, ylab=y)
qplot(aes(x=datafilt[,x],y=datafilt[,y], col=datafilt$Species), xlab=x, ylab=y)
qplot(x=datafilt[,x],y=datafilt[,y], col=datafilt$Species, xlab=x, ylab=y)
datafilt<-filter(data, Species %in% s)
qplot(x=datafilt[,x],y=datafilt[,y], col=datafilt$Species, xlab=x, ylab=y)
s<-c("setosa", "virginica")
s<-c("setosa", "virginica")
datafilt<-filter(data, Species %in% s)
qplot(x=datafilt[,x],y=datafilt[,y], col=datafilt$Species, xlab=x, ylab=y)
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
runApp("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
library(devtools)
library(slidify)
setwd("E:\\Dev\\R\\Coursera\\8 Machine\\shiny\\")
author("shiny_iris")
names(data)
names(data) #the 4 variables and outcome species
x <- c("Sepal.Length")
y <- c("Sepal.Width")
qplot(x=data[,x],y=data[,y], col=Species, data=data,xlab=x, ylab=y)
?iris
names(data)
head(iris)
head(iris,3)
